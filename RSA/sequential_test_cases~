#!/bin/bash


clear

rm rsa_sec
g++ rsa_sec.cpp -o rsa_sec -lgmpxx -lgmp
printf "\n\nCracking RSA in a parallelized way \n\n"





#echo "Bash version ${BASH_VERSION}..."
counter=1
for i in {0..10000..1000}
  do 
	printf "////////////// Test $counter ///////////////\n\n"
	counter=$((counter + 1))	
	echo "Generating key with number: $i"	
	output=$(./rsa_sec generate $i 0)
	
	#echo $output


	var1=$(echo $output | cut -d' ' -f1)
	var2=$(echo $output | cut -d' ' -f2)
	var3=$(echo $output | cut -d' ' -f3)
	echo "Generated $var1! Cracking the public keys"
	#echo $var1
	#echo $var2
	#echo $var3


	start_time="$(date -u +%s.%N)"

	
	result=$(./rsa_sec crack $var1 $var2 0)
	end_time="$(date -u +%s.%N)"

	elapsed="$(bc <<<"$end_time-$start_time")"
	echo "$elapsed seconds elapsed for cracking public key $var1 with modulo $var2"
	#echo $result
	#echo $var3
	if [ "$result" == "$var3" ]
	then
	   echo "Successfully cracked with result $result"
	else
	   echo "Not cracked, the private key was $var3 and the cracked key was $var3?"
	fi
	printf "\n"
	
 done
#./rsa_sec generate 100



printf "End of all RSA tests \n\n"
printf "End of all RSA tests \n\n"
